{"version":3,"sources":["./src/app/account/register.component.ts","./src/app/account/register.component.html"],"names":[],"mappings":"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","file":"default~account-account-module~admin-admin-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService, AlertService } from '../_services';\r\n\r\n@Component({ templateUrl: 'register.component.html' })\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: AccountService,\r\n    private alertService: AlertService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      phonenumber: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    // stop here if form is invalid\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.accountService\r\n      .register(this.form.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        (data) => {\r\n          this.alertService.success('Registration successful', {\r\n            keepAfterRouteChange: true,\r\n          });\r\n          this.router.navigate(['../login'], { relativeTo: this.route });\r\n        },\r\n        (error) => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <h4 class=\"card-header\">Register</h4>\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"firstName\"\r\n          class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"lastName\"\r\n          class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"username\"\r\n          class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"phonenumber\">Phone Number</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"phonenumber\"\r\n          class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.phonenumber.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.phonenumber.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.phonenumber.errors.required\">\r\n            Phone number is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n          <div *ngIf=\"f.password.errors.minlength\">\r\n            Password must be at least 6 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          Register\r\n        </button>\r\n        <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}